// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.23.0

package sqlc

import (
	"github.com/annexsh/annex/test"
	"github.com/google/uuid"
)

type CaseExecution struct {
	ID              test.CaseExecutionID `json:"id"`
	TestExecutionID test.TestExecutionID `json:"test_execution_id"`
	CaseName        string               `json:"case_name"`
	ScheduleTime    Timestamp            `json:"schedule_time"`
	StartTime       Timestamp            `json:"start_time"`
	FinishTime      Timestamp            `json:"finish_time"`
	Error           *string              `json:"error"`
}

type Log struct {
	ID              uuid.UUID             `json:"id"`
	TestExecutionID test.TestExecutionID  `json:"test_execution_id"`
	CaseExecutionID *test.CaseExecutionID `json:"case_execution_id"`
	Level           string                `json:"level"`
	Message         string                `json:"message"`
	CreateTime      Timestamp             `json:"create_time"`
}

type Runner struct {
	RunnerID string    `json:"runner_id"`
	TestID   uuid.UUID `json:"test_id"`
}

type Test struct {
	ID                uuid.UUID `json:"id"`
	Group             string    `json:"group"`
	Name              string    `json:"name"`
	HasInput          bool      `json:"has_input"`
	RunnerID          string    `json:"runner_id"`
	RunnerHeartbeatAt Timestamp `json:"runner_heartbeat_at"`
	CreateTime        Timestamp `json:"create_time"`
}

type TestDefaultInput struct {
	TestID uuid.UUID `json:"test_id"`
	Data   []byte    `json:"data"`
}

type TestExecution struct {
	ID           test.TestExecutionID `json:"id"`
	TestID       uuid.UUID            `json:"test_id"`
	HasInput     bool                 `json:"has_input"`
	ScheduleTime Timestamp            `json:"schedule_time"`
	StartTime    Timestamp            `json:"start_time"`
	FinishTime   Timestamp            `json:"finish_time"`
	Error        *string              `json:"error"`
}

type TestExecutionInput struct {
	TestExecutionID test.TestExecutionID `json:"test_execution_id"`
	Data            []byte               `json:"data"`
}
