// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.23.0

package sqlc

import (
	"github.com/annexsh/annex/test"
	"github.com/google/uuid"
)

type CaseExecution struct {
	ID          test.CaseExecutionID `json:"id"`
	TestExecID  test.TestExecutionID `json:"test_exec_id"`
	CaseName    string               `json:"case_name"`
	ScheduledAt Timestamp            `json:"scheduled_at"`
	StartedAt   Timestamp            `json:"started_at"`
	FinishedAt  Timestamp            `json:"finished_at"`
	Error       *string              `json:"error"`
}

type Log struct {
	ID         uuid.UUID             `json:"id"`
	TestExecID test.TestExecutionID  `json:"test_exec_id"`
	CaseExecID *test.CaseExecutionID `json:"case_exec_id"`
	Level      string                `json:"level"`
	Message    string                `json:"message"`
	CreatedAt  Timestamp             `json:"created_at"`
}

type Test struct {
	ID                uuid.UUID `json:"id"`
	Project           string    `json:"project"`
	Name              string    `json:"name"`
	HasPayload        bool      `json:"has_payload"`
	RunnerID          string    `json:"runner_id"`
	RunnerHeartbeatAt Timestamp `json:"runner_heartbeat_at"`
	CreatedAt         Timestamp `json:"created_at"`
}

type TestDefaultPayload struct {
	TestID  uuid.UUID `json:"test_id"`
	Payload []byte    `json:"payload"`
	IsZero  bool      `json:"is_zero"`
}

type TestExecution struct {
	ID          test.TestExecutionID `json:"id"`
	TestID      uuid.UUID            `json:"test_id"`
	HasPayload  bool                 `json:"has_payload"`
	ScheduledAt Timestamp            `json:"scheduled_at"`
	StartedAt   Timestamp            `json:"started_at"`
	FinishedAt  Timestamp            `json:"finished_at"`
	Error       *string              `json:"error"`
}

type TestExecutionPayload struct {
	TestExecID test.TestExecutionID `json:"test_exec_id"`
	Payload    []byte               `json:"payload"`
}
