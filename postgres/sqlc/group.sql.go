// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.23.0
// source: group.sql

package sqlc

import (
	"context"
)

const createGroup = `-- name: CreateGroup :exec
INSERT INTO groups (context_id, name)
VALUES ($1, $2)
ON CONFLICT (context_id, name) DO NOTHING
`

type CreateGroupParams struct {
	ContextID string `json:"context_id"`
	Name      string `json:"name"`
}

func (q *Queries) CreateGroup(ctx context.Context, arg CreateGroupParams) error {
	_, err := q.db.Exec(ctx, createGroup, arg.ContextID, arg.Name)
	return err
}

const groupExists = `-- name: GroupExists :exec
SELECT context_id, name
FROM groups
WHERE context_id = $1
  AND name = $2
`

type GroupExistsParams struct {
	ContextID string `json:"context_id"`
	Name      string `json:"name"`
}

func (q *Queries) GroupExists(ctx context.Context, arg GroupExistsParams) error {
	_, err := q.db.Exec(ctx, groupExists, arg.ContextID, arg.Name)
	return err
}
